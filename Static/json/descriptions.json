{
    "scripts": {
        "automatic filling": {
            "selezionando-un-elemento-da-una-lista-select": {
                "description": {
                    "Nel codice": [
                        "Seleziono i vari campi che voglio compilare",
                        "Prendo un riferimento per l'elemento select che, in base all'elemento selezionato, userò per compilare i campi",
                        {
                            "Aggiungo l'evento \"click\" all'elemento \"select\":": [
                                "Prendo il valore",
                                "Il valore viene passato allo switch-case",
                                "Utilizzando il 'default' dello switch posso andare a svuotare i campi"
                            ]
                        }
                    ],
                    "Lato interfaccia": [
                        "Seleziono un'opzione nella lista sel tag \"select\"",
                        "In automatico vengono compilati i vari campi che si vogliono compilare"
                    ]
                },
                "to insert": [
                    {
                        "language": "JavaScript",
                        "HTML": [
                            "<select id=\"PROFILO\">",
                            "    <option value=\"\">...</option>",
                            "    <option value=\"profilo 1\">Profilo 1</option>",
                            "    <option value=\"profilo 2\">Profilo 2</option>",
                            "</select>",
                            "",
                            "<input name=\"profilo-1\" type=\"checkbox\" />",
                            "<input name=\"profilo-2\" type=\"checkbox\" />"
                        ],
                        "JavaScript": [
                            "// Seleziono checkbox e radio",
                            "let cb_profilo_1 = document.getElementsByName('profilo-1')[0];",
                            "let cb_profilo_2 = document.getElementsByName('profilo-2')[0];",
                            "",
                            "// Selezione dell'elemento select",
                            "let select = document.getElementById('PROFILO');",
                            "",
                            "// Aggiungo l'evento",
                            "select.addEventListener('change', () => {",
                            "    ",
                            "    // Controllo quale elemento è stato scelto in base al valore restituito",
                            "    switch (select.value) {",
                            "    ",
                            "        // In caso del profilo 1",
                            "        case 'profilo 1':",
                            "        ",
                            "            cb_profilo_1.checked = true;",
                            "            cb_profilo_2.checked = false;",
                            "            ",
                            "            break;",
                            "        ",
                            "        // In caso del profilo 2",
                            "        case 'profilo 2':",
                            "        ",
                            "            cb_profilo_1.checked = false;",
                            "            cb_profilo_2.checked = true;",
                            "            ",
                            "            break;",
                            "        ",
                            "        // In caso non seleziono uno dei profili elencati",
                            "        default:",
                            "            ",
                            "            // Svuoto campi per abilitazione e non",
                            "            cb_profilo_1.checked = false;",
                            "            cb_profilo_2.checked = false;",
                            "            ",
                            "            // Svuoto altri campi",
                            "            // document.getElementsByName('input-text')[0].value = '';",
                            "            // document.getElementsByName('textarea')[0].innerHTML = '';",
                            "            ",
                            "            break;",
                            "    }",
                            "});"
                        ],
                        "example": [
                            "<span class=\"js-comment\">/*",
                            "    Codice scritto in JavaScript",
                            "*/</span>",
                            "",
                            "<span class=\"js-comment\">// Seleziono checkbox e radio</span>",
                            "<span class=\"js-init\">let</span> <span class=\"js-var\">cb_profilo_1</span> = document.<span class=\"js-func\">getElementsByName</span>(<span class=\"str\">'profilo-1'</span>)[0];",
                            "<span class=\"js-init\">let</span> <span class=\"js-var\">cb_profilo_2</span> = document.<span class=\"js-func\">getElementsByName</span>(<span class=\"str\">'profilo-2'</span>)[0];",
                            "",
                            "<span class=\"js-comment\">// Selezione dell'elemento select</span>",
                            "<span class=\"js-init\">let</span> <span class=\"js-var\">select</span> = document.<span class=\"js-func\">getElementById</span>(<span class=\"str\">'PROFILO'</span>);",
                            "",
                            "<span class=\"js-comment\">// Aggiungo l'evento</span>",
                            "select.<span class=\"js-func\">addEventListener</span>(<span class=\"str\">'change'</span>, () => {",
                            "    <span class=\"js-comment\">// Controllo quale elemento è stato scelto in base al valore restituito</span>",
                            "    switch (<span class=\"var\">select</span>.<span class=\"var\">value</span>) {",
                            "        <span class=\"js-comment\">// In caso del profilo 1</span>",
                            "        case <span class=\"str\">'profilo 1'</span>:",
                            "        ",
                            "            <span class=\"js-var\">cb_profilo_1</span>.<span class=\"js-var\">checked</span> = true;",
                            "            <span class=\"js-var\">cb_profilo_2</span>.<span class=\"js-var\">checked</span> = false;",
                            "            ",
                            "            break;",
                            "        <span class=\"js-comment\">// In caso del profilo 2</span>",
                            "        case <span class=\"str\">'profilo 2'</span>:",
                            "        ",
                            "            <span class=\"js-var\">cb_profilo_1</span>.<span class=\"js-var\">checked</span> = false;",
                            "            <span class=\"js-var\">cb_profilo_2</span>.<span class=\"js-var\">checked</span> = true;",
                            "            ",
                            "            break;",
                            "        <span class=\"js-comment\">// In caso non seleziono uno dei profili elencati</span>",
                            "        default:",
                            "            <span class=\"js-comment\">// Svuoto campi per abilitazione e non</span>",
                            "            <span class=\"js-var\">cb_profilo_1</span>.<span class=\"js-var\">checked</span> = false;",
                            "            <span class=\"js-var\">cb_profilo_2</span>.<span class=\"js-var\">checked</span> = false;",
                            "            <span class=\"js-comment\">// Svuoto altri campi</span>",
                            "            <span class=\"js-var\">document</span>.<span class=\"js-func\">getElementsByName</span>(<span class=\"str\">'input-text'</span>)[0].<span class=\"var\">value</span> = <span class=\"str\">''</span>;",
                            "            <span class=\"js-var\">document</span>.<span class=\"js-func\">getElementsByName</span>(<span class=\"str\">'textarea'</span>)[0].<span class=\"var\">innerHTML</span> = <span class=\"str\">''</span>;",
                            "            ",
                            "            break;",
                            "    }",
                            "});"
                        ]
                    }
                ]
            }
        },

        "data extractions": {
            "into-clipboard-by-javascript": {
                "description": [
                    "Controlla il tipo di contenuto che gli arriva",
                    "In base al tipo, sceglie la modalità per copiare l'elemento negli appunti"
                ],
                "to insert": [
                    {
                        "language": "JavaScript",
                        "HTML": [
                            "<input id=\"to-copy\" type=\"text\" />",
                            "<button id=\"to-copy-button\">Copia</button>"
                        ],
                        "JavaScript": [
                            "let input = document.getElementById('to-copy');",
                            "let button = document.getElementById('to-copy-button');",
                            "",
                            "button.addEventListener('click', async () => {",
                            "   if (input.value !== '') {",
                            "       await navigator.clipboard.writeText(input.value);",
                            "       console.log('✅ Testo copiato');",
                            "   }",
                            "});"
                        ],
                        "example": [
                            "<span class=\"comment\">/*",
                            "   CODICE JAVASCRIPT",
                            "*/</span>",
                            "",
                            "try {",
                            "    if (typeof <span class=\"js-var\">content</span> === <span class=\"str\">'string'</span>) {",
                            "        await <span class=\"js-var\">navigator</span>.<span class=\"js-var\">clipboard</span>.<span class=\"js-func\">writeText</span>(<span class=\"js-var\">content</span>);",
                            "        <span class=\"js-var\">console</span>.<span class=\"js-func\">log</span>(<span class=\"str\">'✅ Testo copiato'</span>);",
                            "    } ",
                            "    else if (<span class=\"js-var\">content</span> instanceof <span class=\"class\">Blob</span> || <span class=\"js-var\">content</span> instanceof <span class=\"class\">File</span>) {",
                            "        <span class=\"js-init\">let</span> <span class=\"js-var\">type</span> = <span class=\"js-var\">content</span>.<span class=\"js-var\">type</span> || <span class=\"str\">'application/octet-stream'</span>;",
                            "        <span class=\"js-init\">let</span> <span class=\"js-var\">clipboardItem</span> = new <span class=\"class\">ClipboardItem</span>({ [<span class=\"js-var\">type</span>]: <span class=\"js-var\">content</span> });",
                            "        await <span class=\"js-var\">navigator</span>.<span class=\"js-var\">clipboard</span>.<span class=\"js-func\">write</span>([<span class=\"js-var\">clipboardItem</span>]);",
                            "        <span class=\"js-var\">console</span>.<span class=\"js-func\">log</span>(<span class=\"str\">'✅ Blob/File copiato'</span>);",
                            "    } ",
                            "    else if (<span class=\"js-var\">content</span> instanceof <span class=\"class\">HTMLElement</span>) {",
                            "        switch (<span class=\"js-var\">content</span>.<span class=\"js-var\">tagName</span>) {",
                            "            case <span class=\"str\">'A'</span>:",
                            "                if (<span class=\"js-var\">content</span>.<span class=\"js-func\">hasAttribute</span>(<span class=\"str\">'download'</span>)) {",
                            "                    <span class=\"js-init\">let</span> <span class=\"js-var\">href</span> = <span class=\"js-var\">content</span>.<span class=\"js-var\">href</span>;",
                            "                    <span class=\"js-init\">let</span> <span class=\"js-var\">res</span> = await <span class=\"js-func\">fetch</span>(<span class=\"js-var\">href</span>);",
                            "                    <span class=\"js-init\">let</span> <span class=\"js-var\">blob</span> = await <span class=\"js-var\">res</span>.<span class=\"js-func\">blob</span>();",
                            "                    <span class=\"js-init\">let</span> <span class=\"js-var\">clipboardItem</span> = new <span class=\"class\">ClipboardItem</span>({ [<span class=\"js-var\">blob</span>.<span class=\"js-var\">type</span>]: <span class=\"js-var\">blob</span> });",
                            "                    await <span class=\"js-var\">navigator</span>.<span class=\"js-var\">clipboard</span>.<span class=\"js-func\">write</span>([<span class=\"js-var\">clipboardItem</span>]);",
                            "                    <span class=\"js-var\">console</span>.<span class=\"js-func\">log</span>(<span class=\"str\">'✅ Contenuto da <a download> copiato come blob'</span>);",
                            "                } else {",
                            "                    <span class=\"js-var\">console</span>.<span class=\"js-func\">warn</span>(<span class=\"str\">'❗️ Solo il contenuto dell'attributo \"download\" del tag \"a\" può essere copiato come blob'</span>);",
                            "                }",
                            "            ",
                            "                break;",
                            "",
                            "            case <span class=\"str\">'CANVAS'</span>:",
                            "                <span class=\"js-var\">content</span>.<span class=\"js-func\">toBlob</span>(async (<span class=\"js-func-var\">blob</span>) => {",
                            "                    await <span class=\"js-var\">navigator</span>.<span class=\"js-var\">clipboard</span>.<span class=\"js-func\">write</span>([",
                            "                        new <span class=\"class\">ClipboardItem</span>({ [<span class=\"js-func-var\">blob</span>.<span class=\"js-var\">type</span>]: <span class=\"js-func-var\">blob</span> })",
                            "                    ]);",
                            "                    <span class=\"js-var\">console</span>.<span class=\"js-func\">log</span>(<span class=\"str\">'✅ Canvas copiato negli appunti come immagine'</span>);",
                            "                });",
                            "                ",
                            "                break;",
                            "",
                            "            case <span class=\"str\">'IMG'</span>:",
                            "                <span class=\"js-init\">let</span> <span class=\"js-var\">src</span> = <span class=\"js-var\">content</span>.<span class=\"js-var\">src</span>;",
                            "                if (<span class=\"js-var\">src</span>.<span class=\"js-func\">startsWith</span>(<span class=\"str\">'data:'</span>)) {",
                            "                    <span class=\"js-init\">let</span> <span class=\"js-var\">res</span> = await <span class=\"js-func\">fetch</span>(<span class=\"js-var\">src</span>);",
                            "                    <span class=\"js-init\">let</span> <span class=\"js-var\">blob</span> = await <span class=\"js-var\">res</span>.<span class=\"js-func\">blob</span>();",
                            "                    <span class=\"js-init\">let</span> <span class=\"js-var\">clipboardItem</span>( = new <span class=\"class\">ClipboardItem</span>({ [<span class=\"js-var\">blob</span>.<span class=\"js-var\">type</span>]: <span class=\"js-var\">blob</span> });",
                            "                    await <span class=\"js-var\">navigator</span>.<span class=\"js-var\">clipboard</span>.<span class=\"js-func\">write</span>([<span class=\"js-var\">clipboardItem</span>]);",
                            "                    <span class=\"js-var\">console</span>.<span class=\"js-func\">log</span>(<span class=\"str\">'✅ Immagine (data URL) copiata'</span>);",
                            "                } else {",
                            "                    await <span class=\"js-var\">navigator</span>.<span class=\"js-var\">clipboard</span>.<span class=\"js-func\">writeText</span>(<span class=\"js-var\">src</span>);",
                            "                    <span class=\"js-var\">console</span>.<span class=\"js-func\">warn</span>(<span class=\"str\">'❗️ Solo immagini con data URL possono essere copiate come blob'</span>);",
                            "                }",
                            "                break;",
                            "",
                            "            case <span class=\"str\">'INPUT'</span>:",
                            "                switch (<span class=\"js-var\">content</span>.<span class=\"js-var\">type</span>) {",
                            "",
                            "                    case <span class=\"str\">'color'</span>:",
                            "                    case <span class=\"str\">'date'</span>:",
                            "                    case <span class=\"str\">'datetime-local'</span>:",
                            "                    case <span class=\"str\">'email'</span>:",
                            "                    case <span class=\"str\">'month'</span>:",
                            "                    case <span class=\"str\">'number'</span>:",
                            "                    case <span class=\"str\">'password'</span>:",
                            "                    case <span class=\"str\">'range'</span>:",
                            "                    case <span class=\"str\">'tel'</span>:",
                            "                    case <span class=\"str\">'text'</span>:",
                            "                    case <span class=\"str\">'time'</span>:",
                            "                    case <span class=\"str\">'url'</span>:",
                            "                    case <span class=\"str\">'week'</span>:",
                            "                        await <span class=\"js-func\">copy_to_clipboard</span>(<span class=\"js-var\">content</span>.<span class=\"js-var\">value</span>);",
                            "",
                            "                        break;",
                            "",
                            "                    default:",
                            "                        <span class=\"js-var\">console</span>.<span class=\"js-func\">warn</span>(<span class=\"str\">'❗️ Non è stato possibile copiare alcun elemento'</span>);",
                            "",
                            "                        <span class=\"comment\">// break</span>;",
                            "                }",
                            "",
                            "            case <span class=\"str\">'TEXTAREA'</span>:",
                            "                <span class=\"js-init\">let</span> <span class=\"js-var\">value</span> = <span class=\"js-var\">content</span>.<span class=\"js-var\">value</span>;",
                            "                await <span class=\"js-var\">navigator</span>.<span class=\"js-var\">clipboard</span>.<span class=\"js-func\">writeText</span>(<span class=\"js-var\">value</span>);",
                            "                <span class=\"js-var\">console</span>.<span class=\"js-func\">log</span>(<span class=\"str\">'✅ Testo copiato'</span>);",
                            "                ",
                            "                break;",
                            "",
                            "            case <span class=\"str\">'VIDEO'</span>:",
                            "                <span class=\"js-init\">let</span> <span class=\"js-var\">canvas</span> = <span class=\"js-var\">document</span>.<span class=\"js-func\">createElement</span>(<span class=\"str\">'canvas'</span>);",
                            "                <span class=\"js-var\">canvas</span>.<span class=\"js-var\">width</span> = <span class=\"js-var\">content</span>.<span class=\"js-var\">videoWidth</span>;",
                            "                <span class=\"js-var\">canvas</span>.<span class=\"js-var\">height</span> = <span class=\"js-var\">content</span>.<span class=\"js-var\">videoHeight</span>;",
                            "                <span class=\"js-init\">let</span> <span class=\"js-var\">ctx</span> = <span class=\"js-var\">canvas</span>.<span class=\"js-func\">getContext</span>(<span class=\"str\">'2d'</span>);",
                            "                <span class=\"js-var\">ctx</span>.<span class=\"js-func\">drawImage</span>(<span class=\"js-var\">content</span>, 0, 0, <span class=\"js-var\">canvas</span>.<span class=\"js-var\">width</span>, <span class=\"js-var\">canvas</span>.<span class=\"js-var\">height</span>);",
                            "",
                            "                <span class=\"comment\">// Copia il frame del momento in cui si è voluto copiare</span>",
                            "                await <span class=\"js-func\">copy_to_clipboard</span>(<span class=\"js-var\">canvas</span>);",
                            "",
                            "                break;",
                            "",
                            "            default:",
                            "                await <span class=\"js-var\">navigator</span>.<span class=\"js-var\">clipboard</span>.<span class=\"js-func\">writeText</span>(<span class=\"js-var\">content</span>.<span class=\"js-var\">outerHTML</span>);",
                            "                <span class=\"js-var\">console</span>.<span class=\"js-func\">log</span>(<span class=\"str\">'✅ HTML copiato come testo'</span>);",
                            "",
                            "                break;",
                            "        ",
                            "        }",
                            "    } ",
                            "    else {",
                            "        throw new <span class=\"class\">Error</span>(<span class=\"str\">'Tipo non supportato'</span>);",
                            "    }",
                            "",
                            "} catch (<span class=\"js-func-var\">err</span>) {",
                            "    <span class=\"js-var\">console</span>.<span class=\"js-func\">error</span>(<span class=\"str\">'❌ Errore copia:'</span>, <span class=\"js-func-var\">err</span>);",
                            "}"
                        ]
                    }
                ]
            },
            "into-file-by-javascript&php&sql": {
                "description": {
                    "Nel codice": [
                        {
                            "JavaScript": [
                                "Prende il valore del bottone", 
                                "Esegue una chiamata fetch in cui passa l'id del riferimento del contenuto XML nel database"
                            ]
                        },
                        {
                            "PHP ed SQL": [
                                "Rende il valore passato un numero intero",
                                "Esegue la chiamata al database usando il numero per prelevare il contenuto desiderato",
                                "Controllo se la chiamata al database è stata eseguita con successo",
                                "Vado a prendere il contenuto che volevo estrarre",
                                "Controllo se l'estrazione del contenuto è andata a buon fine",
                                "Restituisco il contenuto estratto",
                                "Esco dallo script per restituire solo il contenuto estratto"
                            ]
                        },
                        {
                            "JavaScript": [
                                "Prende il contenuto che gli ritorna",
                                "Lo fa diventare Blob",
                                "Crea il tag HTML 'a' e gli inserisce l'attributo download con il nome del file",
                                "Aggiunge il tag al documento",
                                "Esegue dinamicamente un click",
                                "Rimuove l'elemento 'a' dal documento HTML"
                            ]
                        }
                    ],
                    "Lato interfaccia": [
                        "Una volta cliccato il bottone compare la schermata per il download del file"
                    ]
                },
                "to insert": [
                    {
                        "language": "JavaScript & PHP & SQL",
                        "HTML": [
                            "<div style=\"display: flex; flex-direction: column;\">",
                            "   <b>Facendo click sul seguente bottone è possibile scaricare un file XML in cui è presente solo l'elemento 'saluto'</b>",
                            "   <button id=\"download-button\" style=\"max-width: 100px;\" value=\"<saluto>Hello World!</saluto>\">Download</button>",
                            "</div>"
                        ],
                        "JavaScript": [
                            "let button = document.getElementById('download-button');",
                            "button.addEventListener('click', function() {",
                            "   data = button.value.trim();",
                            "   // Crea un blob dal contenuto XML",
                            "   const blob = new Blob([data], { type: 'application/xml' });",
                            "   const url = URL.createObjectURL(blob);",
                            "   // Crea un link invisibile per scaricare il file",
                            "   const a = document.createElement('a');",
                            "   a.href = url;",
                            "   a.download = 'dati.xml';",
                            "   document.body.appendChild(a);",
                            "   a.click();",
                            "   // Pulizia",
                            "   document.body.removeChild(a);",
                            "   URL.revokeObjectURL(url);",
                            "})"
                        ],
                        "example": [
                            "<span class=\"comment\">/*",
                            "   CODICE JAVASCRIPT",
                            "*/</span>",
                            "",
                            "<span class=\"comment\">// Prendo il riferimento ad ogni bottone</span>",
                            "<span class=\"js-init\">let</span> <span class=\"js-var\">buttonXML</span> = <span class=\"js-var\">document</span>.<span class=\"js-func\">getElementsByClassName</span>(<span class=\"str\">'download-xml'</span>);",
                            "<span class=\"js-var\">buttonXML</span>.<span class=\"js-func\">forEach</span>(<span class=\"js-func-var\">button</span> => {",
                            "    <span class=\"js-func-var\">button</span>.<span class=\"js-func\">addEventListener</span>(<span class=\"str\">'click'</span>, function() {",
                            "        <span class=\"comment\">// Chiamata fetch</span>",
                            "        <span class=\"js-func\">fetch</span>(<span class=\"str\">'./'</span>, {",
                            "            <span class=\"js-var\">method</span>: <span class=\"str\">\"POST\"</span>,",
                            "            <span class=\"js-var\">headers</span>: {",
                            "                <span class=\"str\">'Content-Type'</span>: <span class=\"str\">'application/x-www-form-urlencoded'</span>",
                            "            },",
                            "            <span class=\"js-var\">body</span>: <span class=\"str\">`XMLdownload=true&id=${<span class=\"js-var\">button</span>.<span class=\"js-var\">value</span>}`</span>",
                            "        })",
                            "        .<span class=\"js-func\">then</span>(<span class=\"js-func-var\">response</span> => {",
                            "            if (!<span class=\"js-func-var\">response</span>.<span class=\"js-var\">ok</span>) {",
                            "                throw new <span class=\"js-class\">Error</span>(<span class=\"str\">'Errore server: '</span> + <span class=\"js-func-var\">response</span>.<span class=\"js-var\">status</span>);",
                            "            }",
                            "            return <span class=\"js-func-var\">response</span>.<span class=\"js-func\">text</span>();",
                            "        })",
                            "        .<span class=\"js-func\">then</span>(<span class=\"js-func-var\">data</span> => {",
                            "            <span class=\"comment\">// Pulisco la variabile da eventuali spazi prima e/o dopo il contenuto</span>",
                            "            <span class=\"js-func-var\">data</span> = <span class=\"js-func-var\">data</span>.<span class=\"js-func\">trim</span>();",
                            "            <span class=\"comment\">// Crea un blob dal contenuto XML</span>",
                            "            <span class=\"js-init\">let</span> <span class=\"js-var\">blob</span> = new <span class=\"js-class\">Blob</span>([<span class=\"js-func-var\">data</span>], { <span class=\"js-var\">type</span>: <span class=\"str\">'application/xml'</span> });",
                            "            <span class=\"js-init\">let</span> <span class=\"js-var\">url</span> = <span class=\"js-var\">URL</span>.<span class=\"js-func\">createObjectURL</span>(<span class=\"js-var\">blob</span>);",
                            "            <span class=\"comment\">// Crea un link invisibile per scaricare il file</span>",
                            "            <span class=\"js-init\">let</span> <span class=\"js-var\">a</span> = <span class=\"js-var\">document</span>.<span class=\"js-func\">createElement</span>(<span class=\"str\">'a'</span>);",
                            "            <span class=\"js-var\">a</span>.<span class=\"js-var\">href</span> = <span class=\"js-var\">url</span>;",
                            "            <span class=\"js-var\">a</span>.<span class=\"js-var\">download</span> = <span class=\"str\">'dati.xml'</span>;",
                            "            <span class=\"js-var\">document</span>.<span class=\"js-var\">body</span>.<span class=\"js-func\">appendChild</span>(<span class=\"js-var\">a</span>);",
                            "            <span class=\"js-var\">a</span>.<span class=\"js-func\">click</span>();",
                            "            <span class=\"comment\">// Pulizia</span>",
                            "            <span class=\"js-var\">document</span>.<span class=\"js-var\">body</span>.<span class=\"js-func\">removeChild</span>(<span class=\"js-var\">a</span>);",
                            "            <span class=\"js-var\">URL</span>.<span class=\"js-func\">revokeObjectURL</span>(<span class=\"js-var\">url</span>);",
                            "        })",
                            "        .<span class=\"js-func\">catch</span>(<span class=\"js-func-var\">err</span> => {",
                            "            <span class=\"js-var\">console</span>.<span class=\"js-func\">error</span>(<span class=\"str\">'Errore: '</span>, <span class=\"js-func-var\">err</span>);",
                            "        });",
                            "    })",
                            "});",
                            "",
                            "",
                            "<span class=\"comment\">/*",
                            "   CODICE PHP & SQL",
                            "*/</span>",
                            "",
                            "if (!<span class=\"func\">empty</span>(<span class=\"php-var\">$_POST</span>[<span class=\"str\">\"XMLdownload\"</span>])) {",
                            "    ",
                            "    include <span class=\"str\">\"./connection_to_db.php\"</span>;",
                            "    ",
                            "    <span class=\"php-var\">$element_id</span> = <span class=\"func\">intval</span>(<span class=\"php-var\">$_POST</span>[<span class=\"str\">'id'</span>]);",
                            "",
                            "    <span class=\"comment\">// Recupera riga (esempio: prima riga)</span>",
                            "    <span class=\"php-var\">$xml_content</span> = <span class=\"str\">\" SELECT ",
                            "                        column",
                            "                    FROM ",
                            "                        table ",
                            "                    WHERE ",
                            "                        id=<span class=\"php-var\">$element_id</span>\"</span>;",
                            "    <span class=\"php-var\">$result</span> = <span class=\"php-var\">$db</span>-><span class=\"func\">query</span>(<span class=\"php-var\">$xml_content</span>);",
                            "    if (!<span class=\"php-var\">$result</span>) {",
                            "        <span class=\"func\">http_response_code</span>(500);",
                            "        <span class=\"func\">die</span>(<span class=\"str\">'Errore nella query'</span>);",
                            "    }",
                            "    ",
                            "    <span class=\"php-var\">$result_row</span> = <span class=\"php-var\">$result</span>-><span class=\"func\">fetchRow</span>(DB_FETCHMODE_ASSOC);",
                            "    if (!<span class=\"php-var\">$result_row</span>) {",
                            "        <span class=\"func\">http_response_code</span>(404);",
                            "        <span class=\"func\">die</span>(<span class=\"str\">'Nessun dato trovato'</span>);",
                            "    }",
                            "    <span class=\"comment\">// Decodifica base64 ? XML</span>",
                            "    <span class=\"php-var\">$xmlDecoded</span> = <span class=\"func\">base64_decode</span>(<span class=\"php-var\">$result_row</span>[<span class=\"str\">'column'</span>]);",
                            "    ",
                            "    <span class=\"func\">header</span>(<span class=\"str\">'Content-Type: application/xml; charset=utf-8'</span>);",
                            "    <span class=\"comment\">// Restituisci XML come testo</span>",
                            "    <span class=\"func\">echo</span> <span class=\"php-var\">$xmlDecoded</span>;",
                            "    <span class=\"comment\">// BLOCCA IL RESTO</span>",
                            "    <span class=\"func\">exit</span>;",
                            "    ",
                            "}"
                        ]
                    }
                ]
            }
        },
        
        "general checks": {
            "cambiamenti-di-stato": {
                "description": {
                    "Nel codice": [
                        "Interroga l'evento", 
                        "Se è stato modificato qualcosa (come gli stati CapsLock e NumLock), inserisce il messaggio in un div preparato in precedenza"
                    ],
                    "Lato interfaccia": [
                        "Compariranno degli avvisi nella posizione desiderata (dove è stato inserito il container con id 'warning')"
                    ]
                },
                "to insert": [
                    {
                        "language": "JavaScript",
                        "HTML": [
                            "<div>La funzionalità di esempio può essere provata su computer attivando o meno il blocco maiuscole da tastiera</div>",
                            "<div style=\"display: flex;\">",
                            "   <input id=\"input-field\" type=\"text\" />",
                            "   <div id=\"warning\" style=\"margin-left: 20px;\"></div>",
                            "</div>"
                        ],
                        "JavaScript": [
                            "// Funzione",
                            "function checkState(event) {",
                            "    // Dove inserire il messaggio",
                            "    let container = document.getElementById('warning');",
                            "    ",
                            "    if (event.getModifierState('CapsLock')) {",
                            "        if (!document.querySelector('span#num-lock')) {",
                            "            // Creo il messaggio",
                            "            let span = document.createElement('span');",
                            "            span.className = 'warning';",
                            "            span.id = 'num-lock';",
                            "            span.innerText = 'Attenzione! Blocco maiuscole ATTIVO!';",
                            "            ",
                            "            container.appendChild(span);",
                            "        }",
                            "        // Se il container è nascosto -> lo mostro",
                            "        if (container.style.display === 'none') {",
                            "            container.style.display = 'block';",
                            "            container.style.display = 'flex';",
                            "            container.style.flexDirection = 'column';",
                            "        }",
                            "    }",
                            "    else {",
                            "        let span = document.querySelector('span#num-lock');",
                            "        if (span) {",
                            "            container.removeChild(span);",
                            "        }",
                            "        // Se il container è vuoto -> lo nascondo",
                            "        if (container.innerHTML === '') {",
                            "            container.style.display = 'none';",
                            "        }",
                            "    }",
                            "}",
                            "",
                            "// Prendo il campo",
                            "let input_field = document.getElementById('input-field');",
                            "// Attacco la funzione agli eventi",
                            "input_field.oninput = function(event) {",
                            "    checkState(event);",
                            "};",
                            "input_field.onmousemove = function(event) {",
                            "    checkState(event);",
                            "};",
                            "input_field.onkeypress = function(event) {",
                            "    checkState(event);",
                            "};"
                        ],
                        "example": [
                            "<span class=\"js-comment\">/*",
                            "   Codice scritto in JavaSCript",
                            "*/</span>",
                            "",
                            "<span class=\"js-init\">let</span> <span class=\"js-var\">container</span> = <span class=\"js-var\">document</span>.<span class=\"js-func\">getElementById</span>(<span class=\"str\">'warning'</span>);",
                            "",
                            "if (<span class=\"js-func-var\">event</span>.<span class=\"js-func\">getModifierState</span>(<span class=\"str\">'stato'</span>)) {",
                            "    if (!<span class=\"js-var\">document</span>.<span class=\"js-func\">querySelector</span>(<span class=\"var\">'span#num-lock'</span>)) {",
                            "        <span class=\"js-comment\">// Creo il messaggio</span>",
                            "        <span class=\"js-init\">let</span> <span class=\"js-var\">span</span> = <span class=\"js-var\">document</span>.<span class=\"js-func\">createElement</span>(<span class=\"str\">'span'</span>);",
                            "        <span class=\"js-var\">span</span>.<span class=\"js-var\">className</span> = <span class=\"str\">'warning'</span>;",
                            "        <span class=\"js-var\">span</span>.<span class=\"js-var\">id</span> = <span class=\"str\">'num-lock'</span>;",
                            "        <span class=\"var\">span</span>.<span class=\"var\">innerText</span> = <span class=\"str\">'Attenzione! ...!'</span>;",
                            "        ",
                            "        <span class=\"js-var\">container</span>.<span class=\"js-func\">appendChild</span>(<span class=\"js-var\">span</span>);",
                            "    }",
                            "    <span class=\"js-comment\">// Se il container è nascosto -> lo mostro</span>",
                            "    if (<span class=\"js-var\">container</span>.<span class=\"js-var\">style</span>.<span class=\"js-var\">display</span> === <span class=\"str\">'none'</span>) {",
                            "        <span class=\"js-var\">container</span>.<span class=\"js-var\">style</span>.<span class=\"js-var\">display</span> = <span class=\"str\">'block'</span>;",
                            "        <span class=\"js-var\">container</span>.<span class=\"js-var\">style</span>.<span class=\"js-var\">display</span> = <span class=\"str\">'flex'</span>;",
                            "        <span class=\"js-var\">container</span>.<span class=\"js-var\">style</span>.<span class=\"js-var\">flexDirection</span> = <span class=\"str\">'column'</span>;",
                            "    }",
                            "}",
                            "else {",
                            "    <span class=\"js-init\">let</span> <span class=\"js-var\">span</span> = <span class=\"js-var\">document</span>.<span class=\"js-func\">querySelector</span>(<span class=\"str\">'span#num-lock'</span>);",
                            "    if (<span class=\"js-var\">span</span>) {",
                            "        <span class=\"js-var\">container</span>.<span class=\"js-func\">removeChild</span>(<span class=\"js-var\">span</span>);",
                            "    }",
                            "    <span class=\"js-comment\">// Controllo quale elemento è stato scelto in base al valore restituito</span>",
                            "    if (<span class=\"js-var\">container</span>.<span class=\"js-var\">innerHTML</span> === <span class=\"str\">''</span>) {",
                            "        <span class=\"js-var\">container</span>.<span class=\"js-var\">style</span>.<span class=\"js-var\">display</span> = <span class=\"str\">'none'</span>;",
                            "    }",
                            "}"
                        ]
                    }
                ]
            },
            "struttura-della-password": {
                "description": {
                    "Nel codice": [
                        "Controlla la struttura della password in base a diversi pattern"
                    ],
                    "Lato interfaccia": [
                        "Se corrisponde al pattern, colora in verde il testo inerente al parametro",
                        "Se non corrisponde al pattern, lo lascia del colore standard"
                    ]
                },
                "to insert": [
                    {
                        "language": "JavaScript",
                        "HTML": [
                            "<div>Il codice più esteso può essere visto nella sezione del controllo delle password (/utilities/password-checker)</div>",
                            "<div style=\"display: block; margin: 0px;\">",
                            "   <input id=\"password-field\" placeholder=\"Inserisci la password\" type=\"password\" />",
                            "</div>",
                            "<div>",
                            "   <input class=\"fake-checkbox\" disabled id=\"lowercase-check\" type=\"checkbox\" />",
                            "   <label for=\"uppercase-check\">Lettere minuscole</label>",
                            "</div>"
                        ],
                        "JavaScript": [
                            "// Prendo le variabili",
                            "let password_field = document.getElementById('password-field');",
                            "let lowercase_check = document.getElementById('lowercase-check');",
                            "",
                            "// Ogni volta che inserisco qualcosa -> faccio il controllo",
                            "password_field.addEventListener('input', () => {",
                            "    ",
                            "    // Prendo la password inserita",
                            "    let password = password_field.value;",
                            "    // Imposto i colori per il cambio colori delle scritte",
                            "    let is_requirement_met = function(field) {",
                            "        let parent_style = field.parentNode.style;",
                            "        if (field.tagName === 'INPUT') {",
                            "            if (field.checked) {",
                            "                parent_style.color = 'green';",
                            "            } else {",
                            "                parent_style.color = '';",
                            "            }",
                            "        } else {",
                            "            if (parent_style.color === 'green') {",
                            "                parent_style.color = '';",
                            "            } else {",
                            "                parent_style.color = 'green';",
                            "            }",
                            "        }",
                            "    };",
                            "    ",
                            "    // Controllo se contiene lettere minuscole",
                            "    if (password.match(/[a-z]+/g)) {",
                            "        if (!lowercase_check.checked) {",
                            "            lowercase_check.checked = true;",
                            "            is_requirement_met(lowercase_check);",
                            "        }",
                            "    } else {",
                            "        if (lowercase_check.checked) {",
                            "            lowercase_check.checked = false;",
                            "            is_requirement_met(lowercase_check);",
                            "        }",
                            "    }",
                            "});"
                        ],
                        "example": [
                            "<span class=\"js-comment\">/*",
                            "   Codice scritto in JavaScript",
                            "*/</span>",
                            "",
                            "<span class=\"js-comment\">// Prendo le variabili</span>",
                            "<span class=\"js-init\">let</span> <span class=\"js-var\">password_field</span> = <span class=\"js-var\">document</span>.<span class=\"js-func\">getElementById</span>(<span class=\"str\">'password-field'</span>);",
                            "<span class=\"js-init\">let</span> <span class=\"js-var\">check</span> = <span class=\"js-var\">document</span>.<span class=\"js-func\">getElementById</span>(<span class=\"str\">'lowercase-check'</span>);",
                            "",
                            "<span class=\"js-comment\">// Ogni volta che inserisco qualcosa -> faccio il controllo</span>",
                            "<span class=\"js-var\">password_field</span>.<span class=\"js-func\">addEventListener</span>(<span class=\"str\">'input'</span>, () => {",
                            "    ",
                            "    <span class=\"js-comment\">// Prendo la password inserita</span>",
                            "    <span class=\"js-init\">let</span> <span class=\"js-var\">password</span> = <span class=\"js-var\">password_field</span>.<span class=\"js-var\">value</span>;",
                            "    <span class=\"js-comment\">// Imposto i colori per il cambio colori delle scritte</span>",
                            "    <span class=\"js-init\">let</span> <span class=\"js-var\">is_requirement_met</span> = function(<span class=\"js-func-var\">field</span>) {",
                            "        <span class=\"js-init\">let</span> <span class=\"js-var\">parent_style</span> = <span class=\"js-func-var\">field</span>.<span class=\"js-var\">parentNode</span>.<span class=\"js-var\">style</span>;",
                            "        if (<span class=\"js-func-var\">field</span>.<span class=\"js-var\">tagName</span> === <span class=\"str\">'INPUT'</span>) {",
                            "            if (<span class=\"js-func-var\">field</span>.<span class=\"js-var\">checked</span>) {",
                            "                <span class=\"js-var\">parent_style</span>.<span class=\"js-var\">color</span> = <span class=\"str\">'green'</span>;",
                            "            } else {",
                            "                <span class=\"js-var\">parent_style</span>.<span class=\"js-var\">color</span> = <span class=\"str\">''</span>;",
                            "            }",
                            "        } else {",
                            "            if (<span class=\"js-var\">parent_style</span>.<span class=\"js-var\">color</span> === <span class=\"str\">'green'</span>) {",
                            "                <span class=\"js-var\">parent_style</span>.<span class=\"js-var\">color</span> = <span class=\"str\">''</span>;",
                            "            } else {",
                            "                <span class=\"js-var\">parent_style</span>.<span class=\"js-var\">color</span> = <span class=\"str\">'green'</span>;",
                            "            }",
                            "        }",
                            "    };",
                            "    ",
                            "    <span class=\"js-comment\">// Controllo se rispetta il controllo</span>",
                            "    if (<span class=\"js-var\">password</span>.<span class=\"js-func\">match</span>(<span class=\"regex\">/'pattern'/</span>g)) {",
                            "        if (!<span class=\"js-var\">check</span>.<span class=\"js-var\">checked</span>) {",
                            "            <span class=\"js-var\">check</span>.<span class=\"js-var\">checked</span> = true;",
                            "            <span class=\"js-func\">is_requirement_met</span>(<span class=\"js-var\">check</span>);",
                            "        }",
                            "    } else {",
                            "        if (<span class=\"js-var\">check</span>.<span class=\"js-var\">checked</span>) {",
                            "            <span class=\"js-var\">check</span>.<span class=\"js-var\">checked</span> = false;",
                            "            <span class=\"js-func\">is_requirement_met</span>(<span class=\"js-var\">check</span>);",
                            "        }",
                            "    }",
                            "});"
                        ]
                    }
                ]
            }
        },

        "page references": {
            "percorso-cliccabile": {
                "description": {
                    "Nel codice": [
                        "Controlo se è presente il paragrafo nel quale mettere il percorso",
                        {
                            "Se presente": [
                                "Creo l'elemento per la Home usando come riferimento i puntini ricevuti",
                                "Inserisco l'elemento per la Home ed il primo separatore \"/\"",
                                {
                                    "Tramite la mia funzione \"clickable_path\" mi viene restituito un percorso sempre più corto": [
                                        "Viene usato per i riferimenti andando indietro ma non troppo",
                                        {
                                            "Per ogni elemento (già con il link alla pagina) dell'array restituito": [
                                                "Inserisco l'elemento",
                                                "Inserisco il separatore"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "Lato interfaccia": [
                        "Clicco in uno dei link facenti parte del percorso attuale (in alto a sinistra)",
                        "Si verrà indirizzati alla pagina corrispondente"
                    ]
                },
                "to insert": [
                    {
                        "language": "JavaScript",
                        "HTML": null,
                        "JavaScript": null,
                        "example": [
                            "<span class=\"comment\">/*",
                            "    Codice scritto in JavaScript",
                            "*/</span>",
                            "<span class=\"init\">let</span> <span class=\"var\">p</span> = <span class=\"var\">document</span>.<span class=\"func\">querySelector</span>(<span class=\"str\">'p.movement_into_pages'</span>);",
                            "if (<span class=\"var\">p</span>) {",
                            "",
                            "    <span class=\"comment\">// Creo l'elemento per la home</span>",
                            "    <span class=\"init\">let</span> <span class=\"var\">a</span> = document.<span class=\"func\">createElement</span>(<span class=\"str\">'a'</span>);",
                            "    <span class=\"var\">a</span>.<span class=\"var\">innerText</span> = <span class=\"str\">'Home'</span>;",
                            "    <span class=\"var\">a</span>.<span class=\"var\">href</span> = <span class=\"var\">points</span>;",
                            "",
                            "    <span class=\"comment\">// Inserisco l'elemento per Home ed il primo separatore</span>",
                            "    <span class=\"var\">p</span>.<span class=\"func\">appendChild</span>(a);",
                            "    <span class=\"var\">p</span>.<span class=\"func\">append</span>(<span class=\"str\">' / '</span>);",
                            "    ",
                            "    <span class=\"comment\">// Inserisco la lista nell'apposita sezione</span>",
                            "    <span class\"func\">clickable_path</span>(<span class=\"var\">path</span>).<span class=\"func\">forEach</span>(<span class=\"var\">e</span> => {",
                            "        <span class=\"comment\">// Inserisco l'elemento</span>",
                            "        <span class=\"var\">p</span>.<span class=\"func\">appendChild</span>(<span class=\"var\">e</span>);",
                            "        <span class=\"comment\">// Inserisco la barra spaziatrice</span>",
                            "        <span class=\"var\">p</span>.<span class=\"func\">append</span>(<span class=\"str\">' / '</span>);",
                            "    });",
                            "}"
                        ]
                    }
                ]
            },
            "tornare-alla-home": {
                "description": {
                    "Nel codice": [
                        "Faccio lo split del percorso URL usando \"/\" come riferimento per lo split",
                        "Tolgo il primo ed ultimo elemento (nome del sito e '')",
                        "Creo la stringa a cui appenderò eventuali altri punti per \"tornare indietro\"",
                        {
                            "Itero il percorso splittato per vedere se e quanti \"..\" devo inserire": [
                                "Se ci sono -> aggiungo tanti doppi punti quanti elementi ho nell'URL splittato"
                            ]
                        },
                        "Ritorno l'array",
                        {
                            "Differenze tra versioni in base al linguaggio": [
                                "In quella di PHP, oltre a togliere primo ed ultimo elemento, devo prima togliere, se presente, il nome dello script finale",
                                "In entrambe è possibile togliere anche pezzi del percorso che non si vogliono utilizzare per \"accorciare le distanze\" (usando altro come Home)"
                            ]
                        }
                    ],
                    "Lato interfaccia": [
                        "Non succede nulla visivamente!"
                    ]
                },
                "to insert": [
                    {
                        "language": "JavaScript",
                        "HTML": null,
                        "JavaScript": null,
                        "example": [
                            "<span class=\"comment\">/*",
                            "    Codice scritto in JavaScript",
                            "*/</span>",
                            "<span class=\"comment\">// Faccio lo split</span>",
                            "<span class=\"init\">var</span> <span class=\"var\">s</span> = <span class=\"var\">path</span>.<span class=\"func\">split</span>(<span class=\"str\">'/'</span>);",
                            "<span class=\"comment\">// Tolgo il primo e l'ultimo elemento</span>",
                            "<span class=\"var\">s</span>.<span class=\"func\">shift</span>();",
                            "<span class=\"var\">s</span>.<span class=\"func\">pop</span>();",
                            "<span class=\"comment\">// Creo l'array al quale mettero' eventuali puntini doppi</span>",
                            "<span class=\"init\">var</span> <span class=\"var\">a</span> = <span class=\"var\">'./'</span>;",
                            "<span class=\"comment\">// Itero per vedere se e quanti puntini devo aggiungere</span>",
                            "for (<span class=\"init\">let</span> <span class=\"var\">e</span> of <span class=\"var\">s</span>) {",
                            "    <span class=\"var\">a</span> += <span class=\"str\">'../'</span>;",
                            "}",
                            "<span class=\"comment\">// Ritorno l'array</span>",
                            "return <span class=\"var\">a</span>;"
                        ]
                    },
                    {
                        "language": "PHP",
                        "HTML": null,
                        "JavaScript": null,
                        "example": [
                            "<span class=\"comment\">/*",
                            "    Codice scritto in PHP",
                            "*/</span>",
                            "<span class=\"comment\">// Prendo il percorso attuale</span>",
                            "<span class=\"php-var\">$relative_path</span> = <span class=\"php-var\">$_SERVER</span>[<span class=\"str\">'PHP_SELF'</span>];",
                            "",
                            "<span class=\"comment\">// Eventualmente tolgo la base al percorso</span>",
                            "<span class=\"php-var\">$relative_path_real</span> = <span class=\"func\">str_replace</span>(<span class=\"str\">'/gianluca/'</span>, <span class=\"str\">'/'</span>, <span class=\"php-var\">$relative_path</span>);",
                            "",
                            "<span class=\"comment\">// Tolgo il nome dello script alla fine</span>",
                            "<span class=\"php-var\">$relative_path_real</span> = <span class=\"func\">explode</span>(<span class=\"str\">'/'</span>, <span class=\"php-var\">$relative_path_real</span>);",
                            "",
                            "<span class=\"comment\">// Tolgo il primo elemento</span>",
                            "<span class=\"func\">array_shift</span>(<span class=\"php-var\">$relative_path_real</span>);",
                            "",
                            "<span class=\"comment\">// Tolgo l'ultimo elemento</span>",
                            "<span class=\"func\">array_pop</span>(<span class=\"php-var\">$relative_path_real</span>);",
                            "",
                            "<span class=\"comment\">// Creo l'array per i punti</span>",
                            "<span class=\"php-var\">$a</span> = <span class=\"str\">'./'</span>;",
                            "",
                            "foreach (<span class=\"php-var\">$relative_path_real</span> as <span class=\"php-var\">$e</span>) {",
                            "    <span class=\"php-var\">$a</span> .= <span class=\"str\">'../'</span>;",
                            "}",
                            "",
                            "<span class=\"comment\">// Ritorno il percorso</span>",
                            "return <span class=\"php-var\">$a</span>;"
                        ]
                    }
                ]
            }
        }
    },
    
    "nome sezione": {
        "script name": {
            "id-riferimento-contenitore-dove-inserire-esempio": {
                "description": "{} o [] -> in base a che elenco puntato voglio fare tramite json_to_element",
                "to insert": [
                    {
                        "language": "Language",
                        "HTML": null,
                        "JavaScript": null,
                        "example": [
                            ""
                        ]
                    }
                ]
            }
        }
    }
}
